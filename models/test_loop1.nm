mdp

// Formula definitions
formula ClosingPending_loop0 = state0=3 & state1=0;
formula ClosingPending_task1 = state1=3 & step1=2;

formula ReadyPending_task1 = state1=1 & state0=2;

formula LoopChildCompleted_loop0 = state0=3 & state1=4;
formula LoopShouldRestart_loop0 = state0=3 & state1=1;
formula LoopChildExcluded_loop0 = state0=3 & state1=0;

formula ReadyPendingCleared = !ReadyPending_task1;
formula ClosingPendingCleared = !ClosingPending_loop0 & !ClosingPending_task1;

formula StepReady_task1 = (state1=2 | state1=3) & step1 < 2;

formula StepAvailable = ReadyPendingCleared & ClosingPendingCleared & !LoopChildCompleted_loop0 & !LoopShouldRestart_loop0 & !LoopChildExcluded_loop0 & (StepReady_task1);

formula ActiveReadyPending_task1 = ReadyPending_task1;

formula ActiveClosingPending_loop0 = ReadyPendingCleared & ClosingPending_loop0;
formula ActiveClosingPending_task1 = ReadyPendingCleared & ClosingPending_task1 & !ClosingPending_loop0;

module loop0
    state0 : [0..5] init 2;
    [step] StepAvailable & state0=2 & state1>=2 -> (state0'=3);
    [loop_child_completed_sync0] state0=3 & state1=4 -> true;
    [loop_decision_sync0] state0=3 & state1=1 -> true;
    [running_to_completed_loop0] state0=3 & state1=0 -> (state0'=4);
    [loop_final_reset0] state0=4 & state1=0 -> true;
    [step] StepAvailable & (state0=0 | state0=1 | state0=5 | state0=3) -> true;
    [step] StepAvailable & state0=4 -> (state0'=5);
endmodule

module task1
    state1 : [0..5] init 1;
    step1 : [0..2] init 0;
    [open_to_started_task1] ActiveReadyPending_task1 -> (state1'=2);
    [loop_child_completed_sync0] state1=4 -> (state1'=1);
    [loop_decision_sync0] state1=1 & state0=3 -> 0.8:(state1'=2) & ( step1'=0 ) + 0.19999999999999996:(state1'=0);
    [loop_final_reset0] state1=0 -> (state1'=1);
    [step] StepAvailable & state1=2 -> (step1'=1) & (state1'=3);
    [step] StepAvailable & state1=3 & step1<1 -> (step1'=step1+1);
    [step] StepAvailable & state1=3 & step1=1 -> (step1'=step1+1) & (state1'=4);
    [step] StepAvailable & state1=4 -> (state1'=5);
    [step] StepAvailable & (state1=0 | state1=1 | state1=5) -> true;
endmodule


// Labels for formulas
label "ClosingPending_loop0" = state0=3 & state1=0;
label "ClosingPending_task1" = state1=3 & step1=2;

label "ReadyPending_task1" = state1=1 & state0=2;

label "LoopChildCompleted_loop0" = state0=3 & state1=4;
label "LoopShouldRestart_loop0" = state0=3 & state1=1;
label "LoopChildExcluded_loop0" = state0=3 & state1=0;

label "ReadyPendingCleared" = !ReadyPending_task1;
label "ClosingPendingCleared" = !ClosingPending_loop0 & !ClosingPending_task1;

label "StepReady_task1" = (state1=2 | state1=3) & step1 < 2;

label "StepAvailable" = ReadyPendingCleared & ClosingPendingCleared & !LoopChildCompleted_loop0 & !LoopShouldRestart_loop0 & !LoopChildExcluded_loop0 & (StepReady_task1);

label "ActiveReadyPending_task1" = ReadyPending_task1;

label "ActiveClosingPending_loop0" = ReadyPendingCleared & ClosingPending_loop0;
label "ActiveClosingPending_task1" = ReadyPendingCleared & ClosingPending_task1 & !ClosingPending_loop0;

